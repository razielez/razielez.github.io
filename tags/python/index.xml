<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>python on Razielez&#39;s Blog</title>
    <link>https://razielez.github.io/tags/python/</link>
    <description>Recent content in python on Razielez&#39;s Blog</description>
    <image>
      <url>https://razielez.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://razielez.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Jan 2019 18:16:21 +0000</lastBuildDate><atom:link href="https://razielez.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>问卷星自动提交脚本</title>
      <link>https://razielez.github.io/posts/%E9%97%AE%E5%8D%B7%E6%98%9F%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Tue, 01 Jan 2019 18:16:21 +0000</pubDate>
      
      <guid>https://razielez.github.io/posts/%E9%97%AE%E5%8D%B7%E6%98%9F%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E8%84%9A%E6%9C%AC/</guid>
      <description>思路  分析页面结构, 问题标号: q+第几题, 问题选项: q+第几题+_第几个选项.    对一次提交进行抓包, 抓取post数据包. 对submidata进行解码得到如下. 明显看出是题号$选项号}组成的.
  写python脚本构造post请求.利用X-Forwarded-For绕过服务器IP地址过滤.
  import requests from time import * from random import randint for i in range(10): header = { &amp;#39;Host&amp;#39;: &amp;#39;www.wjx.cn&amp;#39;, &amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:63.0) Gecko/20100101 Firefox/63.0&amp;#39;, &amp;#39;X-Forwarded-For&amp;#39;: str(randint(1, 255)) + &amp;#39;.&amp;#39; + str(randint(1, 255)) + &amp;#39;.&amp;#39; + str(randint(1, 255)) + &amp;#39;.&amp;#39; + str( randint(1, 255)), &amp;#39;Referer&amp;#39;: &amp;#39;https://www.wjx.cn###.aspx&amp;#39;, &amp;#39;Cookie&amp;#39;: &amp;#39;acw_tc=2f624a1f154##&amp;#39;, } print(&amp;#34;第 &amp;#34; + str(i) + &amp;#34; 提交&amp;#34; + &amp;#34; Using IP:&amp;#34; + header[&amp;#39;X-Forwarded-For&amp;#39;] + &amp;#39; to compalte this Q.</description>
    </item>
    
    <item>
      <title>20行代码的签到脚本(Python)</title>
      <link>https://razielez.github.io/posts/20%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%9A%84%E7%AD%BE%E5%88%B0%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://razielez.github.io/posts/20%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%9A%84%E7%AD%BE%E5%88%B0%E8%84%9A%E6%9C%AC/</guid>
      <description>懒得每天在某个网站签到，写了一个python脚本扔在云主机上。网站很简单，代码就几十行。
签到脚本 import requests username = &amp;#34;####&amp;#34; password = &amp;#34;####&amp;#34; loginUrl = &amp;#34;登录路径/auth/login&amp;#34; s = requests.Session() logindata = { &amp;#39;email&amp;#39;:username, &amp;#39;passwd&amp;#39;:password, &amp;#39;remember_me&amp;#39;:&amp;#39;ture&amp;#39;, } r = s.post(loginUrl,data=logindata) r = s.get(loginUrl) checkinUrl=&amp;#34;签到的路径/user/checkin&amp;#34; rr = s.post(checkinUrl)#执行签到 rr = s.get(loginUrl) # print(rr) # print(rr._content.decode()) exit() 在Linux上定时执行这个脚本 crontab -e 进入编辑模式，设置每天8:00运行一次。 crontab的语法规范 分钟 小时 日期 月份 周 命令
00 8 * * * python /opt/checkin.py</description>
    </item>
    
    <item>
      <title>lambda表达式</title>
      <link>https://razielez.github.io/posts/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://razielez.github.io/posts/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>lambda表达式是一行函数，是函数式编程的一种特性。
python lambda &amp;lt;参数&amp;gt;: 表达式
&amp;gt;&amp;gt;&amp;gt; f = lambda a,b: a + b &amp;gt;&amp;gt;&amp;gt; type(f) #&amp;lt;type &amp;#39;function&amp;#39;&amp;gt; 获取整除2的数字
&amp;gt;&amp;gt;&amp;gt; list(filter(lambda x: x%2==0, range(10))) #[0, 2, 4, 6, 8] 列表并行排序
&amp;gt;&amp;gt;&amp;gt; list1 = [1,2,3,2,3];list2 = [9,4,3,5,6] &amp;gt;&amp;gt;&amp;gt; data = zip(list1, list2) &amp;gt;&amp;gt;&amp;gt; data = sorted(data) &amp;gt;&amp;gt;&amp;gt; list1, list2 = map(lambda t: list(t), zip(*data)) cpp c++里的形式是这样的 [capture list] (parameter list) -&amp;gt;return type {function body}
示例 #include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std; int main() { //call the func.</description>
    </item>
    
    <item>
      <title>Python解决字符编码问题</title>
      <link>https://razielez.github.io/posts/python%E8%A7%A3%E5%86%B3%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 05 May 2018 22:33:02 +0000</pubDate>
      
      <guid>https://razielez.github.io/posts/python%E8%A7%A3%E5%86%B3%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</guid>
      <description>字符串分为unicode 和 str 两种类型
文本字符和二进制数据分别用 str 和 byte表示
#系统默认编码设置为utf-8 &amp;gt;&amp;gt;&amp;gt; import sys &amp;gt;&amp;gt;&amp;gt; sys.getdefultencoding &amp;#39;utf-8&amp;#39; &amp;gt;&amp;gt;&amp;gt; str 与 bytes 之间的转换可以用 encode 和从decode
&amp;gt;&amp;gt;&amp;gt; s = &amp;#34;Python测试&amp;#34; &amp;gt;&amp;gt;&amp;gt; s = s.encode() &amp;gt;&amp;gt;&amp;gt; print(s) b&amp;#39;Python\xe6\xb5\x8b\xe8\xaf\x95&amp;#39; &amp;gt;&amp;gt;&amp;gt; s = s.decode() &amp;gt;&amp;gt;&amp;gt; print(s) &amp;#39;Python测试&amp;#39; base64 &amp;gt;&amp;gt;&amp;gt; import base64 &amp;gt;&amp;gt;&amp;gt; s = &amp;#34;asdasd&amp;#34; &amp;gt;&amp;gt;&amp;gt; s = base64.b64encode(s) &amp;gt;&amp;gt;&amp;gt; print(s) &amp;gt;&amp;gt;&amp;gt; s = base64.b64decode(s) &amp;gt;&amp;gt;&amp;gt; print(s)  参考 ： https://foofish.net/how-python3-handle-charset-encoding.html</description>
    </item>
    
  </channel>
</rss>
